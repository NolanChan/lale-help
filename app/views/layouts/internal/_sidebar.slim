nav
  .sidebar-section
    - my_tasks = current_user.tasks.for_circle(current_circle).volunteered.not_completed
    - open_tasks = current_circle.tasks.unassigned.not_completed.select { |t| can?(:read, t) }

    = sidebar_link(t('.my-tasks'),        my_circle_tasks_path(current_circle),   badge_text: my_tasks.count)
    = sidebar_link(t('.all-open-tasks'),  open_circle_tasks_path(current_circle), badge_text: open_tasks.count)
    = sidebar_link(t('.completed-tasks'), completed_circle_tasks_path(current_circle))

  .sidebar-section
    - all_supplies = current_circle.supplies.not_completed.select { |s| can?(:read, s) }
    = sidebar_link(t('.supplies'),    circle_supplies_path(current_circle),   badge_text: all_supplies.count )

  .sidebar-section
    - unless can? :manage, current_circle
      = sidebar_link(t('.public_members'),   public_circle_members_path(current_circle))
    - if can? :manage, current_circle
      = sidebar_link(t('.directory'),   circle_members_path(current_circle))
    = sidebar_link(t('.organizers'),  circle_organizers_path(current_circle))
    - if can? :manage, current_circle
      = sidebar_link(t('.admin'),    circle_admin_path(current_circle))

  - all_working_groups = current_circle.working_groups.asc_order
  - if all_working_groups.present?
    .sidebar-section
      h4= t('.working_groups')

      - working_groups_per_user(all_working_groups, current_user, :include?).each do |wg|
        - if wg.persisted? && can?(:read, wg)
          = sidebar_link(wg.name, circle_working_group_path(current_circle, wg), badge_text: wg.tasks.not_completed.count + wg.supplies.not_completed.count)
      hr
      - working_groups_per_user(all_working_groups, current_user, :exclude?).each do |wg|
        - if wg.persisted? && can?(:read, wg)
          = sidebar_link(wg.name, circle_working_group_path(current_circle, wg), badge_text: wg.tasks.not_completed.count + wg.supplies.not_completed.count)

  .bottom
    = content_for :sidebar_bottom
    .powered-by
      = t('supported-by')
      .logo
      = t('lale')
