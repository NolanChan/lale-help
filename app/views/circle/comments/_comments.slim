.comment-container

  - if item.comments.count > max_display
    - comments = item.comments.limit(max_display).reverse
    .show_all_comments
      a href='javascript:void(0);' = t('.show_all_comments')
  - else
    - comments = item.comments.reorder('created_at asc')

  - comments.each do |comment|
    .comment class="#{comment.commenter == current_user ? 'right' : 'left' } #{comment.commenter.lale_bot? ? 'lale-bot' : ''}"

      .user-avatar
        = render partial: 'user/user_icon', locals: { user: comment.commenter, link: true }
      .comment-main
        .body
          .comment-text=comment.body
          = render partial: 'circle/comments/edit', locals: { comment: comment, item: item, circle: circle }
        .commenter
          - if comment.commenter == current_user
            .actions
              - edit_url = item.is_a?(User) ? circle_member_comment_path(circle, item, comment) : circle_task_comment_path(circle, item, comment)
              = link_to t('circle.comments.actions.edit'), '#', { data: { comment: comment.id }, class: 'edit_comment_link' }
              = link_to t('circle.comments.actions.delete'), edit_url, method: :delete, data: { confirm: t('circle.comments.actions.delete_confirm') }
          - else
            .name=comment.commenter.name
          .time=comment.comment_date_time

- if can? :create, Comment.new, item, circle
  = render partial: 'circle/comments/new', locals: { item: item, circle: circle }
