.task-comments
  .comment-container
    - task.comments.reverse.each do |comment|
      .comment class="#{comment.commenter == current_user ? 'right' : 'left' }"
        .user-avatar
          = render partial: 'user/user_icon', locals: { user: comment.commenter, link: true }
        .comment-main
          .body=comment.body
          .commenter
            / .actions
            /     = link_to t('circle.comments.actions.delete'),
            /         circle_task_comment_path(circle.id, task.id, comment.id), remote: true,  method: :delete
            /
            /     = link_to t('circle.comments.actions.edit'), '#', {data: {"edit-comment" => comment.id}}

            .name=comment.commenter.name
            .time=comment.comment_date_time

  - if can? :create, Comment, task
    .new-comment
      = form_for [circle, task, @form] do |f|
        .field-row.single
          .field.required
            = f.text_area :body, placeholder: t('circle.comments.placeholder')
        .submit-row
          = f.submit t("circle.comments.#{task.comments.empty? ? 'post' : 'reply'}")
