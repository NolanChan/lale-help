- task_presenter = ::TaskPresenter.new(current_task)
- content_for :header_middle do
  = link_to_back

.task class=task_presenter.css
  main
    .task-header
      .date
        .month= task_presenter.due_date_month
        .day
          span.day_number= task_presenter.due_date_day
          span.day-of-week= task_presenter.due_date_day_of_week
      .title
        -if current_task.complete?
          span.done= t('.task-complete')
        = task_presenter.name
      .description= current_task.description

    .item-details-table
      .row.due-date
        .icon
        .title= Task.human_attribute_name(:due_date)
        .details
          = task_presenter.scheduling_sentence

      .row.duration
        .icon
        .title= Task.human_attribute_name(:duration)
        .details
          = task_presenter.duration_text

      -if current_task.primary_location.present?
        .row.location
          .icon
          .title= Location.model_name.human
          .details= current_task.primary_location.address

      - current_task.extra_locations.each do |loc|
        v.location
          .icon
          .title= Location.model_name.human
          .details= loc.address


      .row.work-group
        .icon
        .title = WorkingGroup.model_name.human
        .details= link_to_working_group(current_task.working_group)


      - if current_task.project.present?
        .row.project
          .icon
          .title = Project.model_name.human
          .details= link_to_project(current_task.project)

      - if current_task.organizer.present?
        .row.organizer
          .details == t(".organized-by", name: link_to_user(current_task.organizer))

    .task-comments data-url="#{circle_task_comments_path(current_circle, current_task)}"
      = render partial: 'circle/comments/comments', locals: { item: current_task, circle: current_circle, max_display: 5 }

  aside

    .actions

      - if can? :manage, current_task

        .dropdown.task-edit-menu
          input id='task-edit-selector' type='checkbox' class='menu-selector'
          label for='task-edit-selector'
            .button.button-super
              = t('helpers.edit', model: current_task.model_name.human)
              i
          .menu.menu-left
            - if can? :edit, current_task
              = link_to(edit_circle_task_path(current_circle, current_task)) do
                = t('helpers.edit', model: current_task.model_name.human)
            - if can? :complete, current_task
              = link_to(circle_task_complete_path(current_circle, current_task), method: :put) do
                = t('helpers.complete', model: current_task.model_name.human)
            - if can? :reopen, current_task
              = link_to(circle_task_reopen_path(current_circle, current_task), method: :put) do
                = t('helpers.reopen', model: current_task.model_name.human)
            - if can? :clone, current_task
              = link_to(circle_task_clone_path(current_circle, current_task), method: :put) do
                = t('helpers.clone', model: current_task.model_name.human)
            - if can? :delete, current_task
              - options = {data: {:confirm => t('helpers.confirm.task.delete')}, :method => :delete}
              = link_to(circle_task_path(current_circle, current_task), options) do
                = t('helpers.delete', model: current_task.model_name.human)

    .volunteers
      == cell 'tasks/sourcing_widget', current_task, current_user: current_user

