- supply = ::SupplyPresenter.new(current_supply)

- content_for :header_middle do
  = link_to_back

.task class=supply.css
  main
    .task-header
      .date
        .month= supply.due_date_month
        .day
          span.day_number= supply.due_date_day
          span.day-of-week= supply.due_date_day_of_week
      .title
        -if current_supply.complete?
          span.done= t('.task-complete')
        = supply.name
      .description= current_supply.description

    .item-details-table
      .row.due-date
        .icon
        .title= Supply.human_attribute_name(:due_date)
        .details
          / FIXME use a named date format here, put it in the yml file.
          = l(current_supply.due_date, format: "%A %-d %B %Y")

      -if current_supply.location.present?
        .row.location
          .icon
          .title= Location.model_name.human
          .details= current_supply.location.address

      .row.work-group
        .icon
        .title= WorkingGroup.model_name.human
        .details= link_to_working_group(current_supply.working_group)

      - if current_supply.volunteer.present?
        .row.volunteer
          .icon
          .title= Supply.human_attribute_name(:volunteer)
          .details = link_to_user(current_supply.volunteer)

      - if current_supply.project.present?
        .row.project
          .icon
          .title = Project.model_name.human
          .details= link_to_project(current_supply.project)

      - if current_supply.organizer.present?
        .row.organizer
          .details == t(".organized-by", name: link_to_user(current_supply.organizer))

    .task-comments data-url="#{circle_supply_comments_path(current_circle, current_supply)}"
      = render partial: 'circle/comments/comments', locals: { item: current_supply, circle: current_circle, max_display: 5 }

  aside

    .actions
      - if can? :manage, current_supply
        = render partial: 'edit_actions', locals: { circle: current_circle, item: current_supply }

    .users-box
      .title
        h2 = t('.users_box_title')

      .user-badges
        - users = supply.volunteers
        - if users.empty?
          = t('users_box.no_users_yet')
        - else
          - users.each do |user|
            == cell('user_badge', user, current_user: current_user, current_circle: current_circle)

      .actions

        - if can? :volunteer, current_supply
          = form_tag circle_supply_volunteer_path(current_circle, current_supply), method: :put do
            button.button-primary= t('helpers.volunteer', model: current_supply.model_name.human)

        - if can? :decline, current_supply
          = form_tag circle_supply_decline_path(current_circle, current_supply), method: :put do
            button.button-primary= t('helpers.decline', model: current_supply.model_name.human)

        - if can? :invite_to, current_supply
          = form_tag circle_supply_invite_path(current_circle, current_supply, type: :working_group), method: :post do
            button.button.button-secondary= t('helpers.invite_working_group')
        - unless current_supply.working_group.is_private?
          = form_tag circle_supply_invite_path(current_circle, current_supply, type: :circle), method: :post do
            button.button.button-secondary= t('helpers.invite_circle')
