.working-group {
  box-shadow    : 0px 2px 10px 0px rgba(0, 0, 0, 0.10);
  border-radius : 3px;
  margin-bottom : 3rem;
  padding       : 1rem;

  &.education {
    background-color : $green-500;

    .working-task.completed {
      background-color : $green-50;
    }
    .toggle-show-completed {
      background-color : $green-50;
      color            : $green-500;
    }
  }

  &.find-jobs {
    background-color : $blue-500;

    .working-task.completed {
      background-color : $blue-50;
    }
    .toggle-show-completed {
      background-color : $blue-50;
      color            : $blue-500;

    }
  }

  &.working-group-open {
    @extend .working-group-arrow-base;
    @extend .fi-chevron-bottom;
  }
  &.working-group-closed {
    @extend .working-group-arrow-base;
    @extend .fi-chevron-top;

    & > .working-tasks {
      height   : 0;
      overflow : hidden;
    }
  }
}

.working-title-container {
  color  : $white;
  margin : 1.5rem 0;
  .working-title {
    font-weight    : bold;
    margin-right   : 1.5rem;
    text-transform : uppercase;
  }
  .task-count {
    font-weight : 200;
  }
}

.working-tasks {
  background    : $white;
  box-shadow    : 0px 2px 10px 0px rgba(0, 0, 0, 0.10);
  border-radius : 2px;
  margin-top    : 1rem;
  height        : auto;
  transition    : height .4s ease;

  .working-task {
    box-shadow      : inset 0px -1px 0px 0px rgba(0, 0, 0, 0.10);
    padding-left    : 2rem;

    &.completed {
      color : rgba($black, .5);
    }
    &.new-task {
      background-color : $amber-100;
    }
  }
}

.toggle-show-completed {
  align-items    : center;
  display        : flex;
  cursor         : pointer;
  font-size      : 1.3rem;
  font-weight    : 600;
  min-height     : 5rem;
  padding-left   : 2rem;
  text-transform : uppercase;
}

.task-header-container {
  display         : flex;
  justify-content : space-between;
  min-height      : 6.6rem;
  height          : 6.6rem;
  & > div {
    display     : flex;
    align-items : center;
    height      : 100%;
  }
  .task-name {
    flex        : 2 1 35rem;
    font-weight : 500;

    .my-task & {
      padding-right : 2rem;
      @extend .badge;
      &:after {
        content        : 'My Task';
      }
    }
    .new-task & {
      @extend .badge;
      &:after {
        content : 'New';
      }
    }

    .working-task.completed &:before {
      content : '(Completed)';
    }
  }

  .task-time,
  .task-status {
    flex : 1 1 17rem;
  }

  .task-status {
    justify-content : flex-end;
    padding-right   : 2rem;
    white-space     : nowrap;

    &:before {
      transform     : translateY(2px);
      padding-right : .5rem;
    }
    &.warning {
      @extend .fi-warning;
      color : $red;
    }
    &.success {
      @extend .fi-circle-check;
      color : $green;
    }

    .task-expanded & {
      background-color : $offwhite;
    }
  }

}

.task-details-container {
  display        : flex;
  padding-bottom : 2rem;

  & > div {
    flex : 1 1 50%;
    &:first-child {
      margin-right : 3rem;
    }
  }
}
.task-comment-container {
  @include clearfix;
}
.task-comment {
  padding          : 2rem;
  background-color : $green-100;
  border-radius    : 1rem;
  .is-author & {
    background-color : $white;
    border           : 1px solid $green-100;
  }
}
.task-author {
  padding       : 1rem 1rem 1rem 2rem;
  margin-bottom : 1rem;
  &:after {
    content : '';
    @include triangle(1.2rem, $green-100, up-left);
  }
  .is-author & {
    display    : inline-block;
    float      : right;
    padding    : 1rem 0;
    position   : relative;
    text-align : right;
    &:before,
    &:after {
      content  : '';
      position : absolute;
      left     : 0;
      top      : 0;
    }
    &:before {
      transform : translateX(-2rem);
      @include triangle(1.2rem, $green-100, up-right);
    }
    &:after {
      @include triangle(1rem, $white, up-right);
      border-right : none;
      transform    : translateX(-1.95rem) translateY(-1px);
    }
  }
}
.task-comment-reply {
  @include button(medium, $green-500);
}
.task-comment-form {
  input {
    width   : 100%;
    padding : 2rem;
  }
}
.task-comment-post {
  @include button(medium, $green-500);
  margin : 1rem 0 0 2rem;
}


.helpers-list {
  display       : flex;
  background    : $offwhite;
  border-radius : 1rem 0 0 1rem;
  padding       : 1rem 1rem 0;
  margin-bottom : 2rem;
  flex-wrap     : wrap;
  .helper {
    background    : $white;
    border-radius : 3px;
    margin        : 0 1rem 1rem 0;
    padding       : .3rem 1rem;
    position      : relative;

    &.can-delete {
      padding-right : 4rem;
      @extend .fi-plus;
      &:before {
        position  : absolute;
        transform : rotateZ(45deg);
        right     : .7rem;
        top       : .7rem;
      }
      &:after {
        border-left : 1px solid $offwhite;
        cursor      : pointer;
        content     : '';
        height      : 3rem;
        line-height : 3rem;
        position    : absolute;
        right       : 0;
        text-align  : center;
        top         : 0;
        width       : 3rem;

      }
    }

    &.can-help {
      @extend .fi-plus;
      background   : $blue-500;
      color        : $white;
      cursor       : pointer;
      padding-left : 4rem;
      text-decoration: none;
      &:before {
        position : absolute;
        left     : .7rem;
        top      : .7rem;
      }
      &:after {
        border-left : 1px solid $white;
        cursor      : pointer;
        content     : '';
        height      : 3rem;
        line-height : 3rem;
        position    : absolute;
        left        : 3rem;
        text-align  : center;
        top         : 0;
        width       : 3rem;
      }
    }
  }

  .completed & {
    @include clearfix;
    border-radius : 1rem;
    background    : $green-100;
    display       : inline-block;
    .helper {
      float : left;
    }
  }
}
.complete-task {
  &:not(.can-complete){
    @include button(medium, $light-grey, true);
  }
  &.can-complete {
    @include button(medium, $blue-500);
  }
}
.task-completed {
  @include button(medium, $green-100);
}
.working-group-arrow-base {
  position : relative;
  &:before {
    color     : $white;
    cursor    : pointer;
    right     : 0;
    position  : absolute;
    top       : 0;
    transform : translateX(-2rem) translateY(3rem);
  }
}
